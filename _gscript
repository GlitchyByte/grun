#!/usr/bin/env bash
# Copyright 2022-2023 GlitchyByte
# SPDX-License-Identifier: MIT-0

# Script utilites.

if [ -z "$TERM" ] || [ "$TERM" == "dumb" ]; then
  # Color control.
  readonly c_reset=""
  readonly c_bold=""
  # Foreground colors.
  readonly cf_black=""
  readonly cf_red=""
  readonly cf_green=""
  readonly cf_yellow=""
  readonly cf_blue=""
  readonly cf_magenta=""
  readonly cf_cyan=""
  readonly cf_white=""
  # Background colors.
  readonly cb_black=""
  readonly cb_red=""
  readonly cb_green=""
  readonly cb_yellow=""
  readonly cb_blue=""
  readonly cb_magenta=""
  readonly cb_cyan=""
  readonly cb_white=""
  # Custom colors.
  readonly cc_error=""
else
  # Color control.
  readonly c_reset=$(tput sgr0)
  readonly c_bold=$(tput bold)
  # Foreground colors.
  readonly cf_black=$(tput setaf 0)
  readonly cf_red=$(tput setaf 1)
  readonly cf_green=$(tput setaf 2)
  readonly cf_yellow=$(tput setaf 3)
  readonly cf_blue=$(tput setaf 4)
  readonly cf_magenta=$(tput setaf 5)
  readonly cf_cyan=$(tput setaf 6)
  readonly cf_white=$(tput setaf 7)
  # Background colors.
  readonly cb_black=$(tput setab 0)
  readonly cb_red=$(tput setab 1)
  readonly cb_green=$(tput setab 2)
  readonly cb_yellow=$(tput setab 3)
  readonly cb_blue=$(tput setab 4)
  readonly cb_magenta=$(tput setab 5)
  readonly cb_cyan=$(tput setab 6)
  readonly cb_white=$(tput setab 7)
  # Custom colors.
  readonly cc_error=${c_reset}$(tput setaf 197)
fi

# Echo to stderr.
echoerr() {
  >&2 echo "${cc_error}$@${c_reset}"
}

# Snippet to test and pick colors.
# for c in {16..255}; do tput setaf $c; echo "${c}"; done | column -c 200
